---

export interface Props {
    skew?: string;
    idName?:string;
    displayPosition?:string
} 

const{skew, idName, displayPosition} = Astro.props;

//Skew = left or empty
//displayPosition = center or empty

---

<section class="section-styled" data-skew={skew} data-displayPosition={displayPosition} id={idName}>
    <slot></slot>
</section>

<style is:global>

 .section-styled{

  position: relative;
  top: 5rem;
  display:flex;
  min-width: 90vw;
  height: 70vh;
  opacity:0.9;
}

.section-styled::after,
.section-styled::before{
  content:" ";
  position:absolute;
  background-color: #c58931;
  background-image: var(--gradient-olive-dark);
  inset: 0;
  z-index: -1;
  transform: skewY(2deg);

} 

.section-styled[data-skew="left"]::after,
.section-styled[data-skew="left"]::before{
  content:" ";
  position:absolute;
  background-color: #c58931;
  background-image: linear-gradient(43deg, #c58931 0%, #7f4e15 46%, #5a3119 100%);

  inset: 0;
  z-index: -1;
  transform: skewY(-2deg);


}

.section-styled[data-displayPosition ="center"]{
    --skew-degrees : 2deg;
    
  position: relative;
  justify-content: center;
  align-items: center;
  
  & h1{
        background: var(--gradient-olive);
        background-clip: text;
        color: transparent;
    }

 
}
</style>